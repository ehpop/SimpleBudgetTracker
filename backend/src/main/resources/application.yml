spring:
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: ${app.jwt.issuer-uri}
          jwk-set-uri: ${app.jwt.issuer-uri}/protocol/openid-connect/certs
  #          public-key-location: classpath:keycloak-key.pub

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include:
          - health
          - info
  endpoint:
    health:
      enabled: true
      group:
        details:
          show-details: "always"
    info:
      enabled: true
  info:
    env:
      enabled: true

logging:
  level:
    com.tracker.backend: INFO

# Cors configuration
app:
  cors:
    allowed-origins: http://localhost:3000
  jwt:
    keycloak: http://localhost:8443
    realm: app
    issuer-uri: ${app.jwt.keycloak}/realms/${app.jwt.realm}
    resource-client-id: frontend-web

# Open API documentation available at http://localhost:8080/swagger-ui/index.html
springdoc:
  swagger-ui:
    operations-sorter: method
    tags-sorter: alpha

---
# Spring configuration
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update # possible values: validate | update | create | create-drop
    show-sql: true
    generate-ddl: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

app:
  jwt:
    keycloak: http://keycloak:8443

---

spring:
  config:
    activate:
      on-profile: local

  h2:
    console.enabled: false # http://localhost:8080/h2-console
  datasource:
    url: jdbc:h2:mem:db
    username: sa
    password: sa
    driverClassName: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
