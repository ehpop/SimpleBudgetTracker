services:
  frontend-service:
    build: frontend
    container_name: frontend-service
    ports:
      - "3000:3000"
    networks:
      - backend-network
    depends_on:
      backend-service:
        condition: service_healthy
      keycloak:
        condition: service_started

  backend-service:
    build: backend
    container_name: backend-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
    networks:
      - backend-network
    depends_on:
      postgres-db:
        condition: service_healthy
      keycloak:
        condition: service_started
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8080/actuator/health
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-db:
    container_name: postgres-db
    image: postgres:16.0-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgres-db:/var/lib/postgresql/data_20_11_2023
    ports:
      - 5432:5432
    networks:
      - backend-network
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: keycloak
    environment:
      - KC_DB_URL_HOST=keycloak-db
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=${KEYCLOAK_DATABASE_TYPE}
      - KC_DB_URL_DATABASE=${KEYCLOAK_DATABASE_NAME}
      - KC_DB_USERNAME=${KEYCLOAK_DATABASE_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_DATABASE_PASSWORD}
    ports:
      - "8443:8443"
    networks:
      - backend-network
    command:
      - "start-dev"
      - "--http-port=8443"
    depends_on:
      keycloak-db:
        condition: service_healthy

  keycloak-db:
    image: mysql:8.2
    container_name: keycloak-db
    environment:
      - MYSQL_DATABASE=${KEYCLOAK_DATABASE_NAME}
      - MYSQL_USER=${KEYCLOAK_DATABASE_USER}
      - MYSQL_PASSWORD=${KEYCLOAK_DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${KEYCLOAK_DATABASE_ROOT_PASSWORD}
    volumes:
      - keycloak_db:/var/lib/mysql_12_12_2023
    ports:
      - "3307:3306"
    networks:
      - backend-network
    healthcheck:
      test: mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}

volumes:
  postgres-db:
    driver: local
  keycloak_db:
    driver: local

networks:
  backend-network:
    driver: bridge
