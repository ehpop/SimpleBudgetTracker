services:
  postgres-db:
    container_name: postgres-db
    image: postgres:16.0-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgres-db:/var/lib/postgresql/data_20_11_2023
    ports:
      - 5432:5432
    networks:
        - backend-network
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 5

  backend-service:
    build: backend
    container_name: backend-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '8080:8080'
    networks:
      - backend-network
    depends_on:
        postgres-db:
          condition: service_healthy

volumes:
  postgres-db:
    driver: local

networks:
  backend-network:
    driver: bridge
